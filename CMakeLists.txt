cmake_minimum_required(VERSION 2.8)
project(raw_packet)

IF (CMAKE_SYSTEM_NAME MATCHES "Linux")
    MESSAGE(STATUS "current platform: Linux ")
ELSEIF (CMAKE_SYSTEM_NAME MATCHES "Windows")
    add_definitions(-DWIN32)
    include_directories(${PROJECT_SOURCE_DIR}/winpcap/include)
    link_directories(${PROJECT_SOURCE_DIR}/winpcap/lib)
    link_libraries(wpcap)
    link_libraries(ws2_32)
    link_libraries(packet)
ENDIF (CMAKE_SYSTEM_NAME MATCHES "Linux")

file(GLOB_RECURSE CPP_SRC_LIST src/*.cpp)
add_definitions(-std=c++14)
add_definitions(-g)
include_directories(src)
add_executable(${PROJECT_NAME} ${CPP_SRC_LIST})
IF (CMAKE_SYSTEM_NAME MATCHES "Linux")
    target_link_libraries(${PROJECT_NAME} pthread pcap)
ELSEIF (CMAKE_SYSTEM_NAME MATCHES "Windows")
    target_link_libraries(${PROJECT_NAME} -static wpcap ws2_32 packet)
ENDIF (CMAKE_SYSTEM_NAME MATCHES "Linux")
set_target_properties(${PROJECT_NAME} PROPERTIES LINK_SEARCH_START_STATIC 1)
set_target_properties(${PROJECT_NAME} PROPERTIES LINK_SEARCH_END_STATIC 1)
